#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct contatos{
  char nome[50];
  int telefone;
//aniversario
  int dia;
  int mes;

};

void inserirContato(FILE *arquivo,struct contatos c){
  
  setbuf(stdin,NULL);
  printf("\n<< Inserir Contato >>\n");
  printf("Nome: ");
  fgets(c.nome, 50, stdin);
  printf("Telefone: ");
  scanf("%d",&c.telefone);
  printf("Dia do aniversário: ");
  scanf("%d",&c.dia);
  printf("Mes do aniversário: ");
  scanf("%d",&c.mes);
  fprintf(arquivo,"Nome: %sTelefone: %.d\nAniversário: %d/%d\n\n",c.nome,c.telefone,c.dia,c.mes);
  printf("<<Contato adicionado com sucesso!>>\n\n");

}

void removerContato(FILE *arquivo,struct contatos c,int numeroContatos, FILE *tempFile){
  int sc = 0;
  printf("\n<<Remover Contato>>\n");
  char nomeRemover[50];
  printf("Digite o nome do contato que deseja remover: ");
  setbuf(stdin, NULL);
  fgets(nomeRemover,50,stdin);
  for (int i = 0; i < numeroContatos;i++){
    fscanf(arquivo,"Nome: %s\nTelefone: %d\nAniversário: %d/%d\n",c.nome,&c.telefone,&c.dia,&c.mes);
    //verificando as letras
    for (int j = 0; j < strlen(c.nome);j++){
      if (strstr(c.nome,nomeRemover)!=NULL || c.nome[j] != nomeRemover[j]){
        sc++;
        if (sc != strlen(c.nome)){//se nao tiver letras iguais o suficiente
          fprintf(tempFile,"Nome: %s\nTelefone: %d\nAniversário: %d/%d\n\n",c.nome,c.telefone,c.dia,c.mes);
          fscanf(arquivo,"Nome: %s\nTelefone: %d\nAniversário: %d/%d\n",c.nome,&c.telefone,&c.dia,&c.mes);
          printf("Nome: %s\nTelefone: %d\nAniversário: %d/%d\n\n",c.nome,c.telefone,c.dia,c.mes);
          printf("<<Contato removido com sucesso!>>\n\n");
          //break;
        break;
        }
      }
    }
  }
  
}

void buscarContato(FILE *arquivo,struct contatos c,int numeroContatos){
  printf("\n<<Buscar Contato>>\n");
  char nomeBuscar[50];
  setbuf(stdin,NULL);
  printf("Diga o nome de quem deseja buscar: ");
  fgets(nomeBuscar,50,stdin);
  int sn=0;//ver quantas letras tem em comum
  for (int i = 0; i < numeroContatos;i++){
    fscanf(arquivo,"Nome: %s\nTelefone: %d\nAniversário: %d/%d\n",c.nome,&c.telefone,&c.dia,&c.mes);
    //verificando as letras
    for (int j = 0; j < strlen(c.nome);j++){
      if (strstr(c.nome,nomeBuscar)==NULL && c.nome[j] == nomeBuscar[j]){
        sn++;
        if (sn == strlen(c.nome)){//se todas as letras forem iguais
          printf("Nome: %s\nTelefone: %d\nAniversário: %d/%d\n\n",c.nome,c.telefone,c.dia,c.mes);
          break;
        }
      }
    }
  }
  //se nao tiver letras iguais suficientes
  if (sn<strlen(c.nome)){
    printf("Não há contato com esse nome!\n\n");
  }
}
//chutando daqui pra baixo
//NINGUEM MEXE NESSA FUNÇÃO
void listarContatos(FILE *arquivo,struct contatos c,int numeroContatos){
  printf("\n<<Listar Contatos>>\n");
  for (int i = 0; i < numeroContatos;i++){
    fscanf(arquivo,"Nome: %s\nTelefone: %d\nAniversário: %d/%d\n",c.nome,&c.telefone,&c.dia,&c.mes);
    printf("Nome: %s\nTelefone: %d\nAniversário: %d/%d\n\n",c.nome,c.telefone,c.dia,c.mes);
  }
}

void buscarLetra(FILE *arquivo, struct contatos c, int numeroContatos){
  char letra;
  printf("\nDigite a letra inicial do nome que deseja buscar: ");
  scanf("%s", &letra);
  printf("\n<<Nomes com a letra %c>>\n",letra);
  int let=0;
  for (int i = 0; i < numeroContatos;i++){
    fscanf(arquivo,"Nome: %s\nTelefone: %d\nAniversário: %d/%d\n",c.nome,&c.telefone,&c.dia,&c.mes);
    if (c.nome[0] == letra){
      printf("Nome: %s\nTelefone: %d\nAniversário: %d/%d\n\n",c.nome,c.telefone,c.dia,c.mes);
      let++;
    }
  }
  if (let == 0){
    printf("Não há pessoas cujo nome começa com %c!\n\n",letra);
  }  
}

void anivMes(FILE *arquivo,struct contatos c,int numeroContatos){
  int mesProcura;
  printf("Qual mês deseja procurar? ");
  scanf("%d",&mesProcura);
  printf("\n<<Aniversariantes do mês>>\n");
  int aniv=0;
  for (int i = 0; i < numeroContatos;i++){
    fscanf(arquivo,"Nome: %s\nTelefone: %d\nAniversário: %d/%d\n",c.nome,&c.telefone,&c.dia,&c.mes);
    if (c.mes == mesProcura){
      printf("Nome: %s\nTelefone: %d\nAniversário: %d/%d\n\n",c.nome,c.telefone,c.dia,c.mes);
      aniv++;
    }
  }
  if (aniv == 0){
    printf("Não há aniversariantes nesse mês!\n\n");
  }  
}

int main(void) {
  struct contatos a;
  int opcao;
  int numeroContatos = 0;
  FILE *arq = fopen("agenda.txt", "w");
  FILE *tempFile = fopen("temp.txt", "w"); // Temporary file to write the updated records

  do{
    printf("Digite 1 para inserir um contato\n");
    printf("Digite 2 para remover um contato\n");
    printf("Digite 3 para buscar um contato pelo nome\n");
    printf("Digite 4 para listar todos os contatos\n");
    printf("Digite 5 para listar os contatos que começam com uma certa letra\n");
    printf("Digite 6 para imprimir os aniversariantes do mês\n");
    printf("Digite 7 para sair\n");
    scanf("%d", &opcao);

    switch(opcao){
      case 1:
        arq = fopen("agenda.txt", "a");
        inserirContato(arq,a);
        numeroContatos++;
        fclose(arq);
        break;
      case 2:
        arq = fopen("agenda.txt", "r");
        tempFile = fopen("temp.txt", "w" );
        removerContato(arq,a,numeroContatos,tempFile);
        fclose(arq);
        fclose(tempFile);
        remove("arq.txt"); // Remove the original file
        rename("temp.txt", "agenda.txt");
        numeroContatos = numeroContatos - 1;
        //fclose(arq);
        break;
      case 3:
        arq = fopen("agenda.txt", "r");
        buscarContato(arq,a,numeroContatos);
        fclose(arq);
        break;
      case 4:
        //NINGUEM MEXE
        arq = fopen("agenda.txt", "r");
        listarContatos(arq,a,numeroContatos);
        fclose(arq);
        break;
      case 5:
        arq = fopen("agenda.txt", "r");
        buscarLetra(arq,a,numeroContatos);
        fclose(arq);
        break;
      case 6:
        arq = fopen("agenda.txt", "r");
        anivMes(arq,a,numeroContatos);
        fclose(arq);
        break;
      case 7:
        printf("Saindo...\n");
        break;
    }
  } while(opcao != 7);

  
  return 0;
}
